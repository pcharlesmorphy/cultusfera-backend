#server.port = 9999

spring.jpa.show-sql=true

#Config base de datos

spring.datasource.url=jdbc:mysql://localhost:3306/biblioteca
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.initialization-mode=always
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
spring.http.encoding.charset=UTF-8
spring.jpa.generate-ddl = true
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.main.allow-circular-references=true

#spring.batch.jdbc.initialize-schema=always


# La propiedad spring.jpa.hibernate.ddl-auto puede tener los siguientes valores:

# create: Hibernate crea la base de datos y todas las tablas al inicio de la aplicaci�n.
# create-drop: Hibernate crea la base de datos y todas las tablas al inicio de la aplicaci�n, y las elimina al detener la aplicaci�n.
# update: Hibernate actualiza autom�ticamente la base de datos y las tablas seg�n los cambios realizados en el modelo de datos de la aplicaci�n.
# validate: Hibernate valida que la base de datos y las tablas existen, pero no realiza cambios en ellas.
# none: Hibernate no realiza ninguna operaci�n en la base de datos, por lo que se espera que la base de datos y las tablas ya existan.
# Es importante tener en cuenta que la configuraci�n de spring.jpa.hibernate.ddl-auto puede tener consecuencias importantes en la integridad de la base de datos y en la seguridad de la aplicaci�n, por lo que es importante utilizarla con precauci�n y comprender las implicaciones de cada opci�n.


#springdoc.api-docs.enabled = true

#springdoc.swagger-ui.enabled = true
#springdoc.swagger-ui.path = /doc/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.defaultModelsExpandDepth=-1

